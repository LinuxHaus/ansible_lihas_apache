# ansible managed
<Macro external_redirect_httpok $FQDNsrc $FQDNdst>  
<VirtualHost *:80>
    Servername $FQDNsrc
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge/
    RewriteCond %{REQUEST_URI} !^/server-status
    RewriteCond %{SERVER_NAME} $FQDNsrc
    RewriteRule ^ http://$FQDNdst%{REQUEST_URI} [END,QSA,R=permanent]
</VirtualHost>
<VirtualHost *:443>
    Servername $FQDNsrc
    SSLEngine on
    SSLCertificateFile /var/lib/dehydrated/certs/$FQDNsrc/fullchain.pem
    SSLCertificateKeyFile /var/lib/dehydrated/certs/$FQDNsrc/privkey.pem
    RewriteEngine on
    RewriteCond %{SERVER_NAME} $FQDNsrc
    RewriteRule ^ https://$FQDNdst%{REQUEST_URI} [END,QSA,R=permanent]
</VirtualHost>
</Macro>  
<Macro external_redirect $FQDNsrc $FQDNdst>  
<VirtualHost *:80>
    Servername $FQDNsrc
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge/
    RewriteCond %{REQUEST_URI} !^/server-status
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>
<VirtualHost *:443>
    Servername $FQDNsrc
    SSLEngine on
    SSLCertificateFile /var/lib/dehydrated/certs/$FQDNsrc/fullchain.pem
    SSLCertificateKeyFile /var/lib/dehydrated/certs/$FQDNsrc/privkey.pem
    RewriteEngine on
    RewriteCond %{SERVER_NAME} $FQDNsrc
    RewriteRule ^ https://$FQDNdst%{REQUEST_URI} [END,QSA,R=permanent]
</VirtualHost>
</Macro>  
{% if external_redirect_domains is defined and external_redirect_domains.domains is defined %}
# %.config.roles.external_redirect.domains:
{%   for i in external_redirect_domains.domains | default({}) | dict2items %}
{%     if i.value.method | default('https') == "httpok" %}
Use external_redirect_httpok {{ i.key }} {{ i.value.dst }}
{%     else %}
Use external_redirect {{ i.key }} {{ i.value.dst }}
{%     endif %}
{%   endfor %}
{% endif %}

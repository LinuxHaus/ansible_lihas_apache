---
- name: include variables
  include_role:
    name: lihas_variables
  when: configspaces is not defined
- name: install apache2
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - apache2
  loop_control:
    loop_var: item

# setup apache2
- name: apache base configuration, leak less information about server
  copy:
    dest: "{{ item }}"
    src: "files/{{ item }}"
  loop:
    - "/etc/apache2/conf-available/servername.conf"
    - "/etc/apache2/conf-available/serversignature.conf"
    - "/etc/apache2/conf-available/servertokens.conf"
    - "/etc/apache2/conf-available/traceenable-off.conf"
    - "/etc/apache2/conf-available/no-x-powered-by.conf"
  loop_control:
    loop_var: item
  notify: reload_apache2

- stat:
    path: /etc/apache2/conf-enabled/security.conf
  register: statresult
- name: "apache2: disable default security"
  command: a2disconf security
  notify: reload_apache2
  when: statresult.stat.exists == true

- stat:
    path: /etc/apache2/sites-enabled/000-default.conf
  register: statresult
- name: "apache2: disable default site"
  command: a2dissite 000-default
  notify: reload_apache2
  when: statresult.stat.exists == true

# Weniger Angriffsfläche auf den Client (XSS u.ä.)
- name: reduce client attack surface
  copy:
    dest: "{{ item }}"
    src: "files/{{ item }}"
  loop:
    - "/etc/apache2/conf-available/x-frame-options-sameorigin.conf"
    - "/etc/apache2/conf-available/x-content-type-options-nosniff.conf"
    - "/etc/apache2/conf-available/referrer-policy.conf"
  loop_control:
    loop_var: item
  notify: reload_apache2

# SSL
- name: SSL base configuration
  copy:
    dest: "{{ item }}"
    src: "files/{{ item }}"
  loop:
    - "/etc/apache2/conf-available/cipherorder.conf"
    - "/etc/apache2/conf-available/sslprotocol.conf"
    - "/etc/apache2/conf-available/strict-transport-security.conf"
    - "/etc/apache2/conf-available/sslproxy.conf"
  loop_control:
    loop_var: item
  notify: reload_apache2

- name: collect enabled modules
  set_fact:
    apache_module_enabled: "{{ apache_module_enabled | default([]) + hostvars[inventory_hostname][item]['config']['apache']['module']['enabled'] }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['apache']['module']['enabled'] is defined
- name: collect disabled module
  set_fact:
    apache_module_disabled: "{{ apache_module_disabled | default([]) + hostvars[inventory_hostname][item]['config']['apache']['module']['disabled'] }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['apache']['module']['disabled'] is defined
- name: collect enabled conf
  set_fact:
    apache_conf_enabled: "{{ apache_conf_enabled | default([]) + hostvars[inventory_hostname][item]['config']['apache']['conf']['enabled'] }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['apache']['conf']['enabled'] is defined
- name: collect disabled conf
  set_fact:
    apache_conf_disabled: "{{ apache_conf_disabled | default([]) + hostvars[inventory_hostname][item]['config']['apache']['conf']['disabled'] }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['apache']['conf']['disabled'] is defined

- name: apache enable conf
  include: "50-apache-a2enconf.yml"
  loop:
    - servername
    - serversignature
    - servertokens
    - traceenable-off
    - no-x-powered-by
    - x-frame-options-sameorigin
    - x-content-type-options-nosniff
    - referrer-policy
    - cipherorder
    - sslprotocol
    - strict-transport-security
    - sslproxy
  loop_control:
    loop_var: item
  async: 60
  poll: 0
- name: apache global httpsrewrite
  include: "50-apache-a2enconf.yml"
  loop:
    - httpsrewrite
  loop_control:
    loop_var: item
  when: LIHASVARS.apache.features.httpsrewrite | default(true)

- name: apache enable modules
  include: "50-apache-a2enmod.yml"
  loop:
    - ssl
    - headers
    - rewrite
  loop_control:
    loop_var: item
  async: 60
  poll: 0

- name: collect rproxy entries
  set_fact:
    rproxy_domains: "{{ LIHASVARS.roles.rproxy | default({}) }}"
  when: LIHASVARS.roles.rproxy is defined
- debug:
    var: hostvars[inventory_hostname][item]
  loop: "{{ configspaces }}"
- name: collect rproxy entries
  set_fact:
    rproxy_domains: "{{ rproxy_domains | default({}) | combine( { 'domains': hostvars[inventory_hostname][item]['config']['roles']['rproxy']['domains'] } ) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['rproxy']['domains'] is defined

- name: collect rproxy entries LIHASVARS
  set_fact:
    rproxy_domainnames: "{{ LIHASVARS.roles.rproxy.domains | default({}) | flatten(levels=1) }}"
  loop: "{{ configspaces }}"
  when: LIHASVARS.roles.rproxy is defined and LIHASVARS.roles.rproxy.domains is defined
- name: "collect rproxy entries {{ configspaces }}"
  set_fact:
    rproxy_domainnames: "{{ rproxy_domainnames | default([]) + hostvars[inventory_hostname][item]['config']['roles']['rproxy']['domains'] | default({}) | flatten(levels=1) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['rproxy']['domains'] is defined
- name: DEBUG RPROXY after %.roles.rproxy.domains
  debug:
    var: rproxy_domainnames
- name: collect dehydrated entries
  set_fact:
    rproxy_domainnames: "{{ rproxy_domainnames | default([]) + hostvars[inventory_hostname][item]['config']['roles']['dehydrated']['domains'] | default({}) | flatten(levels=1) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['dehydrated']['domains'] is defined
- name: DEBUG RPROXY after %.roles.dehydrated.domains
  debug:
    var: rproxy_domainnames
- name: collect external_redirect entries
  set_fact:
    rproxy_domainnames: "{{ rproxy_domainnames | default([]) + hostvars[inventory_hostname][item]['config']['roles']['external_redirect']['domains'] | default({}) | flatten(levels=1) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['external_redirect']['domains'] is defined


# Apache HTTPS Reverse Proxy, Zielserver ist HTTPS
- name: "/etc/apache2/sites-available/reverse_proxy_https_letsencrypt.conf"
  template:
    dest: /etc/apache2/sites-available/reverse_proxy_https_letsencrypt.conf
    src: files/etc/apache2/sites-available/reverse_proxy_https_letsencrypt.conf
  notify: reload_apache2

- name: collect external_redirect entries
  set_fact:
    external_redirect_domains: "{{ LIHASVARS.roles.external_redirect | default({}) }}"
  when: LIHASVARS.roles.external_redirect is defined
- name: collect external_redirect entries
  set_fact:
    external_redirect_domains: "{{ external_redirect_domains | default({}) | combine( { 'domains': hostvars[inventory_hostname][item]['config']['roles']['external_redirect']['domains'] } ) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['external_redirect']['domains'] is defined
# Apache HTTPS external redirects, domain->domain
- name: "/etc/apache2/sites-available/reverse_proxy_https_letsencrypt.conf"
  template:
    dest: /etc/apache2/sites-available/external_redirect.conf
    src: files/etc/apache2/sites-available/external_redirect.conf
  notify: reload_apache2

# Apache HTTPS local domains
- name: collect local_pages entries
  set_fact:
    local_pages: "{{ LIHASVARS.roles.local_pages | default({}) }}"
  when: LIHASVARS.roles.local_pages is defined
- name: collect local_pages entries
  set_fact:
    local_pages: "{{ local_pages | default({}) | combine( { 'domains': hostvars[inventory_hostname][item]['config']['roles']['local_pages']['domains'] } ) }}"
    cacheable: no
  loop: "{{ configspaces }}"
  when: hostvars[inventory_hostname][item]['config']['roles']['local_pages']['domains'] is defined
- name: "/etc/apache2/sites-available/local_pages.conf"
  template:
    dest: /etc/apache2/sites-available/local_pages.conf
    src: files/etc/apache2/sites-available/local_pages.conf
  notify: reload_apache2

- name: apache enable site
  include: "50-apache-a2ensite.yml"
  loop:
    - reverse_proxy_https_letsencrypt
    - external_redirect
    - local_pages
  loop_control:
    loop_var: item

- name: apache enable modules
  include: "50-apache-a2enmod.yml"
  loop:
    - macro
    - proxy
    - proxy_http
    - proxy_wstunnel
    - remoteip
  loop_control:
    loop_var: item
  async: 60
  poll: 0

- name: Dummy Zertifikate rproxy_domainnames
  include: "50-apache-dummycert.yml"
  loop: "{{ rproxy_domainnames }}"
  loop_control:
    loop_var: item
  when: rproxy_domainnames is defined
  async: 60
  poll: 0
- name: Dummy Zertifikate external_redirect_domains
  include: "50-apache-dummycert.yml"
  loop: "{{ external_redirect_domains.domains | flatten(levels=1) }}"
  loop_control:
    loop_var: item
  when: external_redirect_domains.domains is defined
  async: 60
  poll: 0
- name: Dummy Zertifikate local_pages
  include: "50-apache-dummycert.yml"
  loop: "{{ local_pages.domains | flatten(levels=1) }}"
  loop_control:
    loop_var: item
  when: local_pages is defined
  async: 60
  poll: 0
- name: /etc/hosts rproxy entries
  blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK role lihas-apache {{ item }}"
    path: /etc/hosts
    block: |
      {{ rproxy_domains.domains[item]['target_ip'] | default('#') }} {{ item }}
  loop: "{{ rproxy_domains.domains | flatten(levels=1) }}"
  when: rproxy_domains is defined

- name: apache enable additional modules
  include: "50-apache-a2enmod.yml"
  with_list: "{{ apache_module_enabled }}"
  loop_control:
    loop_var: item
  when: apache_module_enabled is defined
  async: 60
  poll: 0
- name: apache disable unwanted modules
  include: "50-apache-a2dismod.yml"
  with_list: "{{ apache_module_disabled }}"
  loop_control:
    loop_var: item
  when: apache_module_disabled is defined
  async: 60
  poll: 0
- name: apache enable additional config
  include: "50-apache-a2enconf.yml"
  with_list: "{{ apache_conf_enabled }}"
  loop_control:
    loop_var: item
  when: apache_conf_enabled is defined
  async: 60
  poll: 0
- name: apache disable unwanted config
  include: "50-apache-a2disconf.yml"
  with_list: "{{ apache_conf_disabled }}"
  loop_control:
    loop_var: item
  when: apache_conf_disabled is defined
  async: 60
  poll: 0
...
